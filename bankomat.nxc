/*
Check after each rund if funds remaining and possibly adjust buttons accordingly
start money: 10 each
wenn struct array nicht funktioniert, 2d array nehmen
INPUTS:
1 pin feld
2 stoppposition auswurf 
3 kartenleser start 
4 lichtsensor daten
OUTPUTS:
a motor kartenleser
b motor schiene auswurf
c motor auswurf einzelne note

*/

int tens=10;
int fifties=10;
int hundreds=10;
int pinno=0000;
int cardno=00;
int amount;
int lang=0;
byte pressedButton;
int selectButton;  

bool stopnow=FALSE;

// taken from NXTmenu.nxc
//is it necessary to pass by reference here?
void waitButton() {                         
byte wbIndex=BTNRIGHT;                      
while (wbIndex <= BTNCENTER)   {                         
        if (ButtonPressed(wbIndex,false) != 0)           
                break;                                   
                wbIndex++;                               
        if (wbIndex > BTNCENTER)                         
                    wbIndex = BTNRIGHT;                   
}                                                         
until(!ButtonPressed(wbIndex,FALSE));                     
pressedButton = wbIndex;                                  
}

void giveNote(int count) {
while (count>0) {
	OnFwd(OUT_C, 50);
	Wait(1200);
	Off(OUT_C);
	Wait(300);
	OnRev(OUT_C, 50);
	Wait(1200);
	Off(OUT_C);
	count--;
}
}

void distribute(int amount,int &tens,int &fifties,int &hundreds) {
int a,b,c;
//unnecessary here? does previous FN break correctly?
if (amount > ( (tens * 10) + (fifties * 50) + (hundreds * 100))) {
	TextOut(0,LCD_LINE1,"Sorry, this machine");
	TextOut(0,LCD_LINE2,"  is out of funds.");
} else {
	OnFwd(OUT_B, 50);
	SetSensor(S2,SENSOR_TOUCH);
	until (Sensor(S2) == 1);
	Off(OUT_B);
	

	//checkt nicht den fall was passiert wenn nur ein 50 und dann 50 weiter
	//kÃ¶nnen nicht mit 20ern ausgegeben werden
	a=amount / 100;
	while (a > hundreds) a--;
	hundreds=hundreds - a;
	giveNote(a);
	amount-= a * 100;
	if (amount>0) {
	RotateMotor(OUT_B, -50, 850);
	b=amount / 50;
	while (b > fifties) b--;
	fifties=fifties - b;
	giveNote(b);
	amount-= b * 50;
	}
	if (amount>0) {
	
	RotateMotor(OUT_B, -50, 800);
	c=amount / 10;
	while (c > tens) c--;
	tens=tens - c;	
	giveNote(c);
	amount-= c * 10;
	}
	if (amount>0) {
		TextOut(0,LCD_LINE1,"CANNOT HAPPEN");
		PlayTone(440,1000); 
		Wait(1000);
	}
	else {
	//not how you do return codes?!
	//return(0);
	}
	}
}

int bin(int given) {
int result;
if (given > 20 && given < 30) result=0;
if (given > 40 && given < 55) result=1;
return result;
}

void waiting(int &cardno,int &lang) {
int val,c1,c2,c3,c4,c5,touch;
string s1,s2,s3,s4,s5,sum;
SetSensor(S4,SENSOR_LIGHT);
SetSensor(S3,SENSOR_TOUCH);
touch=Sensor(S3);
int readlang; 
SetSensorMode(1, IN_MODE_RAW);
SetSensorType(1, IN_TYPE_SWITCH);


until (touch==TRUE) {
if (readlang > 49 && readlang < 54) {
	if (lang==2) lang=0; else lang++;   
} else if (readlang >= 6 && readlang < 11) {
	if (lang==0) lang=2; else lang--;   
}

ClearScreen();

if (lang==2) {
TextOut(0,LCD_LINE2,"SVP introduisez");
TextOut(0,LCD_LINE3,"la carte");
TextOut(0,LCD_LINE5," << Francaise >>");
} else if (lang==1) {
TextOut(0,LCD_LINE2,"Bitte Karte");
TextOut(0,LCD_LINE3,"einstecken");
TextOut(10,LCD_LINE5,"<< Deutsch >>");
} else {
TextOut(0,LCD_LINE2,"Please insert");
TextOut(0,LCD_LINE3,"your card");
TextOut(10,LCD_LINE5,"<< English >>");
}
Wait(200);
touch=Sensor(S3);
readlang=Sensor(S1);
}

//TODO: Remove NumOut when cards work
RotateMotor(OUT_A,-55,75);
c1=bin(Sensor(S4));
NumOut(0,LCD_LINE1,c1);
Wait(50);
RotateMotor(OUT_A,-55,45);
c2=bin(Sensor(S4));
val=Sensor(S4);
NumOut(8,LCD_LINE1,c2);
Wait(50);
RotateMotor(OUT_A,-55,45);
c3=bin(Sensor(S4));
NumOut(16,LCD_LINE1,c3);
Wait(50);
RotateMotor(OUT_A,-55,45);
c4=bin(Sensor(S4));
NumOut(24,LCD_LINE1,c4);
Wait(50);
RotateMotor(OUT_A,-55,45);
c5=bin(Sensor(S4));
NumOut(32,LCD_LINE1,c5);
Off(OUT_A);
Wait(1500);
c1 = 2 * 2 * 2 * 2 * c1;
c2 = 2 * 2 * 2 * c2;
c3 = 2 * 2 * c3;
c4 = 2 * c4;
cardno=c1 + c2 + c3 + c4 + c5;
NumOut(0,LCD_LINE6,cardno);
if (cardno==23) {
amount=(10 * tens) + (50 * hundreds) + (100 * hundreds);
distribute(amount,tens,fifties,hundreds);
stopnow=TRUE;
}
Wait(500);
}

string requestFunds(int account,int pin,int amount, int lang, int mailbox) {
string actemp=NumToStr(account);
string commandstring;
if (StrLen(actemp)==1) {
commandstring="0";
commandstring+=actemp;
} else {
commandstring=actemp;
}

commandstring+="X";
commandstring+=NumToStr(pin);
commandstring+="X";

if (amount<100) {
commandstring+="0";
}
if (amount<1000) {
commandstring+="0";
}
commandstring+=NumToStr(amount);
//ClearScreen();
if (lang==2) { 
TextOut(0,LCD_LINE1,commandstring);
TextOut(0,LCD_LINE4,"Attendez SVP"); 
} else if (lang==1) { 
TextOut(10,LCD_LINE4,"Bitte warten"); 
} else { 
TextOut(10,LCD_LINE4,"Please wait"); 
}

while(!BluetoothStatus(0)==NO_ERR) {
	TextOut(0,LCD_LINE1,"Connecting...");
	Wait(1000);
	//add cancel here
}
string tempeh;

/* not working
string tempeh="leer";
SetSensorMode(1, IN_MODE_RAW);
SetSensorType(1, IN_TYPE_SWITCH);
int xcan=Sensor(S1);
while (tempeh=="leer" && (!(xcan > 19 && xcan < 23))) {
SendResponseString(mailbox,commandstring);
Wait(1500);
ReceiveRemoteString(7,true,tempeh); 
xcan=Sensor(S1);
}
*/

SendResponseString(mailbox,commandstring);
Wait(500);
until (ReceiveRemoteString(7,true,tempeh)==NO_ERR); 

TextOut(0,LCD_LINE3,tempeh);
Wait(500);
return tempeh;

}

void selectAmount(int &amount, int lang) {
int x2;
SetSensorMode(1, IN_MODE_RAW);
SetSensorType(1, IN_TYPE_SWITCH);

amount=100;
ClearScreen();
if (lang==2) { TextOut(0,LCD_LINE2,"Retirez CHF:"); }
else if (lang==1) { TextOut(0,LCD_LINE2,"Abheben sFr:"); }
else { TextOut(0,LCD_LINE2,"Withdraw CHF:"); }
NumOut(0,LCD_LINE3,amount);
x2 =Sensor(S1);

until((x2 > 30 && x2 < 34) || (x2 > 19 && x2 < 23)) {
    if (x2 > 49 && x2 < 54) {
    if (amount<500) amount+=10;   
    TextOut(0,LCD_LINE3,"    ");
    NumOut(0,LCD_LINE3,amount);
    } else if (x2 >= 6 && x2 < 11) {
    if (amount>10) amount-=10;   
    TextOut(0,LCD_LINE3,"    ");
    NumOut(0,LCD_LINE3,amount);
    }
Wait(200);
x2 =Sensor(S1);
}
if (x2 > 19 && x2 < 23) {
stopnow=TRUE;
} else {
ClearScreen();
if (lang==2) { 
TextOut(0,LCD_LINE2,"Vouz avez choisi:"); 
} else if (lang==1) { 
TextOut(0,LCD_LINE2,"Sie waehlten:"); 
} else { 
TextOut(0,LCD_LINE2,"You selected:"); 
}
NumOut(0,LCD_LINE3,amount);
Wait(1000);
}

ClearScreen();

while (((20 * tens) + (50 * fifties) + (100 * hundreds)) < amount) {
if (amount==0) {
	if (lang==2) { TextOut(0,LCD_LINE2,"FEHLT"); }
	else if (lang==1) { TextOut(0,LCD_LINE1,"Automat leer."); }
	else { TextOut(0,LCD_LINE2,"Sorry, out of funds:"); }
	stopnow=TRUE;
	Wait(1000);
} else {
	amount-=10;
	if (lang==2) { TextOut(0,LCD_LINE2,"FEHLT"); }
	else if (lang==1) { TextOut(0,LCD_LINE1,"Angepasst an"); }
	else { TextOut(0,LCD_LINE2,"Adjusted to"); } 

	NumOut(0,LCD_LINE3,amount);
	Wait(1000);
}

}

}

void readPin(int &pinno, int lang) {
int x = 0;
int y = 5;
int i = 0;
string Stelle1,Stelle2,Stelle3,Stelle4;
string Pincode;
int Pin[4];
int posstar=0;
SetSensorMode(1, IN_MODE_RAW);
SetSensorType(1, IN_TYPE_SWITCH);
ClearScreen();
if (lang==2) {
TextOut(0,LCD_LINE2,"SVP entrez vous PIN:");
}
else if (lang==1) {
TextOut(0,LCD_LINE1,"Bitte PIN");
TextOut(0,LCD_LINE2,"eingeben:");
}
else {
TextOut(0,LCD_LINE2,"Please enter PIN number:");
}

until ((Sensor(S1) < 24 && Sensor(S1) > 19) || (Sensor(S1) < 35 && Sensor(S1) > 29)) {
x = Sensor(S1);
if (x > 6 && x < 11) {
      PlayTone(200,200);
      TextOut(posstar,LCD_LINE3,"*");
      posstar+=5;
      Pin[i] = 1;
      Wait(300);
	i++;
   } else if (x > 12  && x < 16) {
      PlayTone(200,200);
      TextOut(posstar,LCD_LINE3,"*");
      posstar+=5;
      Pin[i] = 2;
	Wait(300);
	i++;
   } else if(x > 15 && x < 19) {
      PlayTone(200,200);
      TextOut(posstar,LCD_LINE3,"*");
      posstar+=5;
      Pin[i] = 3;
      Wait(300);
	i++;
   } else if (x > 50 && x < 56) {
      PlayTone(200,200);
      TextOut(posstar,LCD_LINE3,"*");
      posstar+=5;
      Pin[i] = 4;
      Wait(300);
	i++;
   }
}
x = Sensor(S1);
if (x > 30 && x < 35) {
   ClearScreen();
   Stelle1 = NumToStr(Pin[0]);
   Stelle2 = NumToStr(Pin[1]);
   Stelle3 = NumToStr(Pin[2]);
   Stelle4 = NumToStr(Pin[3]);
   Pincode = StrCat(Stelle1,Stelle2,Stelle3,Stelle4);
   pinno=StrToNum(Pincode);
//   TextOut(0,LCD_LINE2,"Read success");
   // NumOut(0,LCD_LINE3,pinno);
   Wait(1000);
} else if (x > 19 && x < 23) {
stopnow=TRUE;
} 


}

task main() {
SetBrickDataName("Bankomat");

int mailbox=1;
bool selectc;
while (!selectc) {
TextOut(0,LCD_LINE1, "Channel:");
NumOut(50,LCD_LINE1, mailbox);
waitButton();
switch (pressedButton) {
case BTNRIGHT: 
	mailbox++;
	break;
case BTNLEFT: 
	mailbox--;
	break;
case BTNCENTER:
	selectc=TRUE;
	break;
}

}


while (true) {
ClearScreen();
//insert graphic

waiting(cardno,lang);
readPin(pinno,lang);
if (!stopnow) selectAmount(amount,lang);
string nresponse;
if (!stopnow) nresponse=requestFunds(cardno,pinno,amount,lang,mailbox); 
TextOut(0,LCD_LINE1,nresponse);
Wait(500);
ClearScreen();
if (nresponse=="ack") {
    distribute(amount,tens,fifties,hundreds);
    PlayTone(500,200);
    } else if (nresponse=="pin") {
    	PlayTone(100,200);
    	if (lang==2) {
	TextOut(0,LCD_LINE2,"FEHLT");
	} else if (lang==1) {
	TextOut(0,LCD_LINE1,"Falsche PIN Nummer.");
	} else {
	TextOut(0,LCD_LINE2,"Sorry, wrong PIN.");
	}
    } else if (nresponse=="card") {
    	if (lang==2) { TextOut(0,LCD_LINE2,"FEHLT");
	} else if (lang==1) { TextOut(0,LCD_LINE1,"Ungueltiges Konto"); }
	else { TextOut(0,LCD_LINE2,"Account not found"); }
    } else if (nresponse=="funds") {
	if (lang==2) { 
	TextOut(0,LCD_LINE2,"FEHLT"); 
	} else if (lang==1) { 
	TextOut(0,LCD_LINE1,""); 
	} else { TextOut(0,LCD_LINE2,"Insufficient funds.");
	}
	}
Wait(2000);
ClearScreen();
if (nresponse=="kill")	{
RotateMotor(OUT_A,-100,720);
if (lang==2) {
	TextOut(0,LCD_LINE1,"FEHLT");
	TextOut(0,LCD_LINE2,"FEHLT");
} else if (lang==1) {
	TextOut(0,LCD_LINE1,"Falsche PIN,");
	TextOut(0,LCD_LINE2,"Karte einbehalten.");
} else {
	TextOut(0,LCD_LINE1,"Wrong PIN, we");
	TextOut(0,LCD_LINE2,"keep your card.");
}
Wait(1500);
} else {
ClearScreen();
if (lang==2) {
TextOut(0,LCD_LINE1,"Merci!");
TextOut(0,LCD_LINE2,"FEHLT");
TextOut(0,LCD_LINE3,"FEHLT");
} else if (lang==1) {
TextOut(10,LCD_LINE1,"Vielen Dank! Wir");
TextOut(0,LCD_LINE2,"wuenschen einen");
TextOut(10,LCD_LINE3,"schoenen Tag!");
} else {
TextOut(0,LCD_LINE1,"Thank you!");
TextOut(0,LCD_LINE2,"Have a");
TextOut(0,LCD_LINE3,"nice day!");
}
RotateMotor(OUT_A,70,720);
} 

ClearScreen();
if (lang==2) { 
TextOut(0,LCD_LINE2,"Attendez SVP..."); 
} else if (lang==1) { 
TextOut(0,LCD_LINE1,"Bitte warten..."); 
} else { 
TextOut(0,LCD_LINE2,"Please wait..."); 
}

Wait(1500);
cardno=0;
amount=0;
pinno=0;
stopnow=FALSE;
}

}

