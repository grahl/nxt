/*
Check after each rund if funds remaining and possibly adjust buttons accordingly
start money: 10 each
wenn struct array nicht funktioniert, 2d array nehmen
INPUTS:
1 pin feld
2 kartensensor einschub
3 lichtsensor timing feld
4 lichtsensor daten
OUTPUTS:
a motor 
b
c

*/

int twenties=10;
int fifties=10;
int hundreds=10;

#define TWENTY 20
#define FIFTY 50
#define HUNDRED 100


void giveHundred(int number) {
//sensor move!
}

void giveFifty(int number) {
//sensor move!
}

void giveTwenty(int number) {
//sensor move!
}

task enterPIN() {
//read variable voltage

}

void distribute(int amount,int &twenties,int &fifties,int &hundreds) {
int a,b,c;
//using TWENTY etc breaks..wtf?!
if (amount>( (twenties * 20) + (fifties * 50) + (hundreds * 100))) {
	TextOut(0,LCD_LINE1,"Sorry, this machine");
	TextOut(0,LCD_LINE2,"  is out of funds.");
} else {

	//checkt nicht den fall was passiert wenn nur ein 50 und dann 50 weiter
	//kÃ¶nnen nicht mit 20ern ausgegeben werden
	a=amount / hundreds;
	giveHundred(a);
	amount-= a * hundreds;
	b=amount / fifties;
	giveFifty(b);
	amount-= b * fifties;
	c=amount / twenties;
	giveTwenty(c);

	if (amount>0) {
		TextOut(0,LCD_LINE1,"CANNOT HAPPEN");
		PlayTone(440,1000); 
	}
	else {
	//not how you do return codes?!
	//return(0);
	}
	}
}

void scan() {
int scan[];
//readSensorB
//if readSensorB true
//	scan[]+=readSensorC	

}

void requestFunds(int account,int pin,int amount) {
string commandstring=NumToStr(account);
commandstring+="X";
commandstring+=NumToStr(pin);
commandstring+="X";
commandstring+=NumToStr(amount);
//check btdevicename==bank if possible, if creatable
//SendRemoteString(connection,queue,commandstring);

}

task main() {
SetBrickDataName("Bankomat");
//Wait for card
//if sensor_a true
//	Scan
}

